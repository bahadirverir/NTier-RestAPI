// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250621093513_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("DepartmentID");

                    b.HasIndex("DepartmentName")
                        .IsUnique();

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            DepartmentName = "IT"
                        },
                        new
                        {
                            DepartmentID = 2,
                            DepartmentName = "İnsan Kaynakları"
                        },
                        new
                        {
                            DepartmentID = 3,
                            DepartmentName = "Yazılım"
                        },
                        new
                        {
                            DepartmentID = 4,
                            DepartmentName = "Finans"
                        },
                        new
                        {
                            DepartmentID = 5,
                            DepartmentName = "Pazarlama"
                        },
                        new
                        {
                            DepartmentID = 6,
                            DepartmentName = "Satış"
                        },
                        new
                        {
                            DepartmentID = 7,
                            DepartmentName = "Müşteri Hizmetleri"
                        },
                        new
                        {
                            DepartmentID = 8,
                            DepartmentName = "Lojistik"
                        },
                        new
                        {
                            DepartmentID = 9,
                            DepartmentName = "Mali İşler"
                        },
                        new
                        {
                            DepartmentID = 10,
                            DepartmentName = "Ar-Ge"
                        });
                });

            modelBuilder.Entity("Entities.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("JobID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(10,3)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("JobID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            DepartmentID = 3,
                            FirstName = "Bahadır",
                            JobID = 1,
                            LastName = "Verir",
                            Salary = 30000m
                        },
                        new
                        {
                            EmployeeID = 2,
                            DepartmentID = 4,
                            FirstName = "Hakan",
                            JobID = 4,
                            LastName = "Yıldırım",
                            Salary = 42000m
                        },
                        new
                        {
                            EmployeeID = 3,
                            DepartmentID = 2,
                            FirstName = "Miyaw",
                            JobID = 3,
                            LastName = "Miyawoğlu",
                            Salary = 47500m
                        },
                        new
                        {
                            EmployeeID = 4,
                            DepartmentID = 3,
                            FirstName = "Burak",
                            JobID = 2,
                            LastName = "Bozkurt",
                            Salary = 28000m
                        },
                        new
                        {
                            EmployeeID = 5,
                            DepartmentID = 3,
                            FirstName = "Furkan",
                            JobID = 1,
                            LastName = "Nerse",
                            Salary = 30000m
                        },
                        new
                        {
                            EmployeeID = 6,
                            DepartmentID = 4,
                            FirstName = "Yasin",
                            JobID = 4,
                            LastName = "Burma",
                            Salary = 35000m
                        },
                        new
                        {
                            EmployeeID = 7,
                            DepartmentID = 1,
                            FirstName = "Baha",
                            JobID = 5,
                            LastName = "Sağlam",
                            Salary = 27500m
                        },
                        new
                        {
                            EmployeeID = 8,
                            DepartmentID = 1,
                            FirstName = "Emre",
                            JobID = 12,
                            LastName = "Aydın",
                            Salary = 46000m
                        },
                        new
                        {
                            EmployeeID = 9,
                            DepartmentID = 6,
                            FirstName = "Gökhan",
                            JobID = 7,
                            LastName = "Kaya",
                            Salary = 38000m
                        },
                        new
                        {
                            EmployeeID = 10,
                            DepartmentID = 5,
                            FirstName = "Mehmet",
                            JobID = 6,
                            LastName = "Öztürk",
                            Salary = 42000m
                        },
                        new
                        {
                            EmployeeID = 11,
                            DepartmentID = 3,
                            FirstName = "İsmail",
                            JobID = 2,
                            LastName = "Güven",
                            Salary = 39000m
                        },
                        new
                        {
                            EmployeeID = 12,
                            DepartmentID = 10,
                            FirstName = "Ayşe",
                            JobID = 11,
                            LastName = "Kara",
                            Salary = 52000m
                        },
                        new
                        {
                            EmployeeID = 13,
                            DepartmentID = 9,
                            FirstName = "Zeynep",
                            JobID = 14,
                            LastName = "Ekinci",
                            Salary = 41000m
                        },
                        new
                        {
                            EmployeeID = 14,
                            DepartmentID = 3,
                            FirstName = "Serdar",
                            JobID = 15,
                            LastName = "Turan",
                            Salary = 48000m
                        },
                        new
                        {
                            EmployeeID = 15,
                            DepartmentID = 1,
                            FirstName = "Hasan",
                            JobID = 18,
                            LastName = "Demir",
                            Salary = 37500m
                        },
                        new
                        {
                            EmployeeID = 16,
                            DepartmentID = 6,
                            FirstName = "Seda",
                            JobID = 16,
                            LastName = "Koç",
                            Salary = 34000m
                        },
                        new
                        {
                            EmployeeID = 17,
                            DepartmentID = 7,
                            FirstName = "Deniz",
                            JobID = 8,
                            LastName = "Büyük",
                            Salary = 47000m
                        },
                        new
                        {
                            EmployeeID = 18,
                            DepartmentID = 8,
                            FirstName = "Ali",
                            JobID = 9,
                            LastName = "Şahin",
                            Salary = 39000m
                        },
                        new
                        {
                            EmployeeID = 19,
                            DepartmentID = 5,
                            FirstName = "Zeynep",
                            JobID = 17,
                            LastName = "Can",
                            Salary = 47000m
                        },
                        new
                        {
                            EmployeeID = 20,
                            DepartmentID = 4,
                            FirstName = "Ömer",
                            JobID = 13,
                            LastName = "Görkem",
                            Salary = 46000m
                        },
                        new
                        {
                            EmployeeID = 21,
                            DepartmentID = 3,
                            FirstName = "Cem",
                            JobID = 19,
                            LastName = "Yılmaz",
                            Salary = 42000m
                        },
                        new
                        {
                            EmployeeID = 22,
                            DepartmentID = 3,
                            FirstName = "Hüseyin",
                            JobID = 2,
                            LastName = "Topal",
                            Salary = 43000m
                        },
                        new
                        {
                            EmployeeID = 23,
                            DepartmentID = 1,
                            FirstName = "Özgür",
                            JobID = 5,
                            LastName = "Balkaya",
                            Salary = 55000m
                        },
                        new
                        {
                            EmployeeID = 24,
                            DepartmentID = 9,
                            FirstName = "Gül",
                            JobID = 20,
                            LastName = "Aslan",
                            Salary = 46000m
                        },
                        new
                        {
                            EmployeeID = 25,
                            DepartmentID = 5,
                            FirstName = "Burcu",
                            JobID = 6,
                            LastName = "Duman",
                            Salary = 35000m
                        },
                        new
                        {
                            EmployeeID = 26,
                            DepartmentID = 10,
                            FirstName = "Sefa",
                            JobID = 11,
                            LastName = "Sarı",
                            Salary = 52000m
                        },
                        new
                        {
                            EmployeeID = 27,
                            DepartmentID = 4,
                            FirstName = "Neslihan",
                            JobID = 4,
                            LastName = "Güzel",
                            Salary = 42000m
                        },
                        new
                        {
                            EmployeeID = 28,
                            DepartmentID = 1,
                            FirstName = "Murat",
                            JobID = 12,
                            LastName = "Öztürk",
                            Salary = 46000m
                        },
                        new
                        {
                            EmployeeID = 29,
                            DepartmentID = 2,
                            FirstName = "Emine",
                            JobID = 3,
                            LastName = "Çelik",
                            Salary = 43000m
                        },
                        new
                        {
                            EmployeeID = 30,
                            DepartmentID = 3,
                            FirstName = "Fatma",
                            JobID = 2,
                            LastName = "Kocaoğlu",
                            Salary = 48000m
                        },
                        new
                        {
                            EmployeeID = 31,
                            DepartmentID = 6,
                            FirstName = "Bahadır",
                            JobID = 16,
                            LastName = "Akdoğan",
                            Salary = 44000m
                        },
                        new
                        {
                            EmployeeID = 32,
                            DepartmentID = 7,
                            FirstName = "Mert",
                            JobID = 8,
                            LastName = "Özdemir",
                            Salary = 47000m
                        },
                        new
                        {
                            EmployeeID = 33,
                            DepartmentID = 8,
                            FirstName = "İrem",
                            JobID = 9,
                            LastName = "Erdem",
                            Salary = 42000m
                        },
                        new
                        {
                            EmployeeID = 34,
                            DepartmentID = 5,
                            FirstName = "Fatih",
                            JobID = 17,
                            LastName = "Duran",
                            Salary = 50000m
                        },
                        new
                        {
                            EmployeeID = 35,
                            DepartmentID = 9,
                            FirstName = "Büşra",
                            JobID = 14,
                            LastName = "Arslan",
                            Salary = 46000m
                        },
                        new
                        {
                            EmployeeID = 36,
                            DepartmentID = 3,
                            FirstName = "Hakan",
                            JobID = 19,
                            LastName = "Aksu",
                            Salary = 49000m
                        },
                        new
                        {
                            EmployeeID = 37,
                            DepartmentID = 4,
                            FirstName = "Eda",
                            JobID = 13,
                            LastName = "Aslan",
                            Salary = 42000m
                        },
                        new
                        {
                            EmployeeID = 38,
                            DepartmentID = 10,
                            FirstName = "Selim",
                            JobID = 11,
                            LastName = "Kılıç",
                            Salary = 43000m
                        },
                        new
                        {
                            EmployeeID = 39,
                            DepartmentID = 1,
                            FirstName = "Cemre",
                            JobID = 5,
                            LastName = "Çetin",
                            Salary = 46000m
                        },
                        new
                        {
                            EmployeeID = 40,
                            DepartmentID = 2,
                            FirstName = "Berk",
                            JobID = 3,
                            LastName = "Koç",
                            Salary = 48000m
                        },
                        new
                        {
                            EmployeeID = 41,
                            DepartmentID = 2,
                            FirstName = "Sinem",
                            JobID = 3,
                            LastName = "Yalçın",
                            Salary = 45000m
                        },
                        new
                        {
                            EmployeeID = 42,
                            DepartmentID = 3,
                            FirstName = "Tolga",
                            JobID = 1,
                            LastName = "Demirtaş",
                            Salary = 32000m
                        },
                        new
                        {
                            EmployeeID = 43,
                            DepartmentID = 6,
                            FirstName = "Melis",
                            JobID = 16,
                            LastName = "Özkan",
                            Salary = 38000m
                        },
                        new
                        {
                            EmployeeID = 44,
                            DepartmentID = 1,
                            FirstName = "Kerem",
                            JobID = 18,
                            LastName = "Akın",
                            Salary = 29000m
                        },
                        new
                        {
                            EmployeeID = 45,
                            DepartmentID = 5,
                            FirstName = "Derya",
                            JobID = 17,
                            LastName = "Karataş",
                            Salary = 47000m
                        },
                        new
                        {
                            EmployeeID = 46,
                            DepartmentID = 10,
                            FirstName = "Barış",
                            JobID = 11,
                            LastName = "Erdoğan",
                            Salary = 44000m
                        },
                        new
                        {
                            EmployeeID = 47,
                            DepartmentID = 4,
                            FirstName = "Ebru",
                            JobID = 13,
                            LastName = "Acar",
                            Salary = 36000m
                        },
                        new
                        {
                            EmployeeID = 48,
                            DepartmentID = 3,
                            FirstName = "Can",
                            JobID = 15,
                            LastName = "Uysal",
                            Salary = 31000m
                        },
                        new
                        {
                            EmployeeID = 49,
                            DepartmentID = 9,
                            FirstName = "Nazlı",
                            JobID = 14,
                            LastName = "Özsoy",
                            Salary = 42000m
                        },
                        new
                        {
                            EmployeeID = 50,
                            DepartmentID = 3,
                            FirstName = "Fırat",
                            JobID = 19,
                            LastName = "Sarı",
                            Salary = 48000m
                        },
                        new
                        {
                            EmployeeID = 51,
                            DepartmentID = 7,
                            FirstName = "Aylin",
                            JobID = 8,
                            LastName = "Güney",
                            Salary = 35000m
                        },
                        new
                        {
                            EmployeeID = 52,
                            DepartmentID = 1,
                            FirstName = "Serkan",
                            JobID = 12,
                            LastName = "Doğan",
                            Salary = 41000m
                        },
                        new
                        {
                            EmployeeID = 53,
                            DepartmentID = 6,
                            FirstName = "Pelin",
                            JobID = 7,
                            LastName = "Kaya",
                            Salary = 47000m
                        },
                        new
                        {
                            EmployeeID = 54,
                            DepartmentID = 4,
                            FirstName = "Murat",
                            JobID = 13,
                            LastName = "Şen",
                            Salary = 45000m
                        },
                        new
                        {
                            EmployeeID = 55,
                            DepartmentID = 2,
                            FirstName = "Elif",
                            JobID = 3,
                            LastName = "Çetin",
                            Salary = 39000m
                        },
                        new
                        {
                            EmployeeID = 56,
                            DepartmentID = 8,
                            FirstName = "Onur",
                            JobID = 9,
                            LastName = "Demir",
                            Salary = 30000m
                        },
                        new
                        {
                            EmployeeID = 57,
                            DepartmentID = 5,
                            FirstName = "İlker",
                            JobID = 6,
                            LastName = "Yılmaz",
                            Salary = 50000m
                        },
                        new
                        {
                            EmployeeID = 58,
                            DepartmentID = 10,
                            FirstName = "Selin",
                            JobID = 11,
                            LastName = "Özdemir",
                            Salary = 43000m
                        },
                        new
                        {
                            EmployeeID = 59,
                            DepartmentID = 1,
                            FirstName = "Tuna",
                            JobID = 18,
                            LastName = "Kılıç",
                            Salary = 34000m
                        },
                        new
                        {
                            EmployeeID = 60,
                            DepartmentID = 9,
                            FirstName = "Damla",
                            JobID = 20,
                            LastName = "Aydın",
                            Salary = 46000m
                        });
                });

            modelBuilder.Entity("Entities.Models.Job", b =>
                {
                    b.Property<int>("JobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("JobID"));

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("JobID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("JobTitle")
                        .IsUnique();

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            JobID = 1,
                            DepartmentID = 3,
                            JobTitle = "Yazılım Mühendisi"
                        },
                        new
                        {
                            JobID = 2,
                            DepartmentID = 3,
                            JobTitle = "Sistem Analisti"
                        },
                        new
                        {
                            JobID = 3,
                            DepartmentID = 2,
                            JobTitle = "İşe Alım Uzmanı"
                        },
                        new
                        {
                            JobID = 4,
                            DepartmentID = 4,
                            JobTitle = "Finans Uzmanı"
                        },
                        new
                        {
                            JobID = 5,
                            DepartmentID = 1,
                            JobTitle = "Ağ Mühendisi"
                        },
                        new
                        {
                            JobID = 6,
                            DepartmentID = 5,
                            JobTitle = "Pazarlama Müdürü"
                        },
                        new
                        {
                            JobID = 7,
                            DepartmentID = 6,
                            JobTitle = "Satış Yöneticisi"
                        },
                        new
                        {
                            JobID = 8,
                            DepartmentID = 7,
                            JobTitle = "Müşteri Hizmetleri"
                        },
                        new
                        {
                            JobID = 9,
                            DepartmentID = 8,
                            JobTitle = "Lojistik Uzmanı"
                        },
                        new
                        {
                            JobID = 10,
                            DepartmentID = 8,
                            JobTitle = "Mali İşler Müdürü"
                        },
                        new
                        {
                            JobID = 11,
                            DepartmentID = 10,
                            JobTitle = "Ar-Ge Yöneticisi"
                        },
                        new
                        {
                            JobID = 12,
                            DepartmentID = 1,
                            JobTitle = "Sistem Yöneticisi"
                        },
                        new
                        {
                            JobID = 13,
                            DepartmentID = 4,
                            JobTitle = "İç Denetçi"
                        },
                        new
                        {
                            JobID = 14,
                            DepartmentID = 9,
                            JobTitle = "Hukuk Danışmanı"
                        },
                        new
                        {
                            JobID = 15,
                            DepartmentID = 3,
                            JobTitle = "Mobil Yazılım Uzmanı"
                        },
                        new
                        {
                            JobID = 16,
                            DepartmentID = 6,
                            JobTitle = "Satış Temsilcisi"
                        },
                        new
                        {
                            JobID = 17,
                            DepartmentID = 5,
                            JobTitle = "Dijital Pazarlama"
                        },
                        new
                        {
                            JobID = 18,
                            DepartmentID = 1,
                            JobTitle = "Teknik Servis"
                        },
                        new
                        {
                            JobID = 19,
                            DepartmentID = 3,
                            JobTitle = "Yazılım Test Uzmanı"
                        },
                        new
                        {
                            JobID = 20,
                            DepartmentID = 9,
                            JobTitle = "Maliye Uzmanı"
                        });
                });

            modelBuilder.Entity("Entities.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f93af840-58d0-4c65-a978-b86c04dd6cb2",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "eb94d5bf-2041-4e73-972d-d837f310d79f",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "709d958c-2220-4b65-9fac-eaf7bb2c0de0",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Entities.Models.Employee", b =>
                {
                    b.HasOne("Entities.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Entities.Models.Job", "Job")
                        .WithMany("Employees")
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Department");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("Entities.Models.Job", b =>
                {
                    b.HasOne("Entities.Models.Department", "Department")
                        .WithMany("Jobs")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Models.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("Entities.Models.Job", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
